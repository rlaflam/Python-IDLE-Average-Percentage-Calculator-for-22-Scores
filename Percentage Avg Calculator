import tkinter

class TestAvg:
    def __init__(self):
        # Create the main window.
        self.main_window = tkinter.Tk()

        # Create the frames.
        self.entry_frames = []
        self.entries = []
        
        for i in range(22):
            frame = tkinter.Frame(self.main_window)
            frame.pack()
            self.entry_frames.append(frame)
            
            label = tkinter.Label(frame, text=f'Enter the score for test {i+1}:')
            label.pack(side='left')
            entry = tkinter.Entry(frame, width=10)
            entry.pack(side='left')
            self.entries.append(entry)

        self.avg_frame = tkinter.Frame(self.main_window)
        self.avg_frame.pack()

        self.result_label = tkinter.Label(self.avg_frame, text='Average:')
        self.result_label.pack(side='left')
        self.avg = tkinter.StringVar()
        self.avg_label = tkinter.Label(self.avg_frame, textvariable=self.avg)
        self.avg_label.pack(side='left')

        self.button_frame = tkinter.Frame(self.main_window)
        self.button_frame.pack()

        self.calc_button = tkinter.Button(self.button_frame, text='Average', command=self.calc_avg)
        self.calc_button.pack(side='left')
        self.quit_button = tkinter.Button(self.button_frame, text ='Quit', command=self.main_window.destroy)
        self.quit_button.pack(side='left')

        # Start the main loop.
        tkinter.mainloop()

    def calc_avg(self):
        # Get the test scores and store them in variables.
        grades = [float(entry.get()) for entry in self.entries if entry.get()]

        if grades:
            # Calculate the average.
            average = sum(grades) / len(grades)

            # Update the avg_label widget by storing the value of the average in the StringVar object referenced by avg.
            self.avg.set(f"{average:.2f}")
        else:
            # If no grades are entered, display "N/A" for the average.
            self.avg.set("N/A")

# Create an instance of the TestAvg class.
if __name__ == '__main__':
    test_avg = TestAvg()

